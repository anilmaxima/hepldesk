{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { API_URL } from \"../config\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TicketDetails(_ref) {\n  var route = _ref.route;\n  var ticketId = route.params.ticketId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    ticket = _useState2[0],\n    setTicket = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    reply = _useState6[0],\n    setReply = _useState6[1];\n  var fetchTicketDetails = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var res = yield fetch(API_URL + \"/api/tickets/\" + ticketId);\n        var data = yield res.json();\n        if (data.ticket && data.ticket.attachmentUrl && !data.ticket.attachmentUrl.startsWith(\"http\")) {\n          data.ticket.attachmentUrl = \"\" + API_URL + data.ticket.attachmentUrl;\n        }\n        setTicket(data.ticket);\n        setMessages(data.messages);\n      } catch (err) {\n        console.error(err);\n        Alert.alert(\"Error\", \"Failed to fetch ticket details\");\n      }\n    });\n    return function fetchTicketDetails() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleReply = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!reply.trim()) return;\n      try {\n        var res = yield fetch(API_URL + \"/api/tickets/\" + ticketId + \"/respond\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            author: \"support\",\n            message: reply\n          })\n        });\n        if (!res.ok) throw new Error(\"Failed to send reply\");\n        setReply(\"\");\n        fetchTicketDetails();\n      } catch (err) {\n        console.error(err);\n        Alert.alert(\"Error\", \"Failed to send reply\");\n      }\n    });\n    return function handleReply() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchTicketDetails();\n  }, []);\n  if (!ticket) return _jsx(Text, {\n    style: {\n      padding: 20\n    },\n    children: \"Loading ticket...\"\n  });\n  return _jsxs(ScrollView, {\n    contentContainerStyle: ticketStyles.container,\n    children: [_jsx(Text, {\n      style: ticketStyles.heading,\n      children: \"Ticket Details\"\n    }), _jsxs(Text, {\n      style: ticketStyles.label,\n      children: [\"Name: \", ticket.name]\n    }), _jsxs(Text, {\n      style: ticketStyles.label,\n      children: [\"Email: \", ticket.email]\n    }), _jsxs(Text, {\n      style: ticketStyles.label,\n      children: [\"Description: \", ticket.description]\n    }), _jsxs(Text, {\n      style: [ticketStyles.label, {\n        fontWeight: \"bold\",\n        color: ticket.status === \"new\" ? \"red\" : ticket.status === \"in_progress\" ? \"orange\" : \"green\"\n      }],\n      children: [\"Status: \", ticket.status.toUpperCase()]\n    }), ticket.attachmentUrl && _jsx(Image, {\n      source: {\n        uri: ticket.attachmentUrl\n      },\n      style: ticketStyles.image,\n      resizeMode: \"contain\"\n    }), _jsx(Text, {\n      style: [ticketStyles.heading, {\n        marginTop: 20\n      }],\n      children: \"Messages\"\n    }), _jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsxs(View, {\n          style: ticketStyles.message,\n          children: [_jsxs(Text, {\n            style: ticketStyles.author,\n            children: [item.author, \":\"]\n          }), _jsx(Text, {\n            children: item.message\n          })]\n        });\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Write a reply...\",\n      value: reply,\n      onChangeText: setReply,\n      style: ticketStyles.input,\n      multiline: true\n    }), _jsx(Button, {\n      title: \"Send Reply\",\n      onPress: handleReply,\n      color: \"#28a745\"\n    })]\n  });\n}\nvar ticketStyles = StyleSheet.create({\n  container: {\n    padding: 20,\n    paddingBottom: 50\n  },\n  heading: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  label: {\n    marginBottom: 5,\n    fontSize: 16\n  },\n  image: {\n    width: \"100%\",\n    height: 250,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  message: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  author: {\n    fontWeight: \"bold\",\n    marginBottom: 3\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 10,\n    minHeight: 60\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TextInput","Button","FlatList","Image","Alert","ScrollView","API_URL","jsx","_jsx","jsxs","_jsxs","TicketDetails","_ref","route","ticketId","params","_useState","_useState2","_slicedToArray","ticket","setTicket","_useState3","_useState4","messages","setMessages","_useState5","_useState6","reply","setReply","fetchTicketDetails","_ref2","_asyncToGenerator","res","fetch","data","json","attachmentUrl","startsWith","err","console","error","alert","apply","arguments","handleReply","_ref3","trim","method","headers","body","JSON","stringify","author","message","ok","Error","style","padding","children","contentContainerStyle","ticketStyles","container","heading","label","name","email","description","fontWeight","color","status","toUpperCase","source","uri","image","resizeMode","marginTop","keyExtractor","item","_id","renderItem","_ref4","placeholder","value","onChangeText","input","multiline","title","onPress","create","paddingBottom","fontSize","marginBottom","width","height","marginVertical","borderRadius","borderWidth","borderColor","minHeight"],"sources":["C:/Users/anilb/OneDrive/Desktop/zealthy-helpdesk/zealthy-helpdesk/frontend/screens/TicketDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TextInput, Button, FlatList, Image, Alert, ScrollView } from \"react-native\";\r\nimport { API_URL } from \"../config\";\r\n\r\nexport default function TicketDetails({ route }) {\r\n  const { ticketId } = route.params;\r\n  const [ticket, setTicket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [reply, setReply] = useState(\"\");\r\n\r\n  // Fetch ticket details and messages\r\n  const fetchTicketDetails = async () => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/api/tickets/${ticketId}`);\r\n      const data = await res.json();\r\n      // Ensure attachmentUrl has full URL\r\n      if (data.ticket && data.ticket.attachmentUrl && !data.ticket.attachmentUrl.startsWith(\"http\")) {\r\n        data.ticket.attachmentUrl = `${API_URL}${data.ticket.attachmentUrl}`;\r\n      }\r\n      setTicket(data.ticket);\r\n      setMessages(data.messages);\r\n    } catch (err) {\r\n      console.error(err);\r\n      Alert.alert(\"Error\", \"Failed to fetch ticket details\");\r\n    }\r\n  };\r\n\r\n  // Send a reply\r\n  const handleReply = async () => {\r\n    if (!reply.trim()) return;\r\n    try {\r\n      const res = await fetch(`${API_URL}/api/tickets/${ticketId}/respond`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ author: \"support\", message: reply })\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to send reply\");\r\n      setReply(\"\");\r\n      fetchTicketDetails();\r\n    } catch (err) {\r\n      console.error(err);\r\n      Alert.alert(\"Error\", \"Failed to send reply\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTicketDetails();\r\n  }, []);\r\n\r\n  if (!ticket) return <Text style={{ padding: 20 }}>Loading ticket...</Text>;\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={ticketStyles.container}>\r\n      <Text style={ticketStyles.heading}>Ticket Details</Text>\r\n      <Text style={ticketStyles.label}>Name: {ticket.name}</Text>\r\n      <Text style={ticketStyles.label}>Email: {ticket.email}</Text>\r\n      <Text style={ticketStyles.label}>Description: {ticket.description}</Text>\r\n      <Text style={[ticketStyles.label, { fontWeight: \"bold\", color: ticket.status === \"new\" ? \"red\" : ticket.status === \"in_progress\" ? \"orange\" : \"green\" }]}>\r\n        Status: {ticket.status.toUpperCase()}\r\n      </Text>\r\n\r\n      {ticket.attachmentUrl && (\r\n        <Image\r\n          source={{ uri: ticket.attachmentUrl }}\r\n          style={ticketStyles.image}\r\n          resizeMode=\"contain\"\r\n        />\r\n      )}\r\n\r\n      <Text style={[ticketStyles.heading, { marginTop: 20 }]}>Messages</Text>\r\n      <FlatList\r\n        data={messages}\r\n        keyExtractor={item => item._id}\r\n        renderItem={({ item }) => (\r\n          <View style={ticketStyles.message}>\r\n            <Text style={ticketStyles.author}>{item.author}:</Text>\r\n            <Text>{item.message}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n\r\n      <TextInput\r\n        placeholder=\"Write a reply...\"\r\n        value={reply}\r\n        onChangeText={setReply}\r\n        style={ticketStyles.input}\r\n        multiline\r\n      />\r\n      <Button title=\"Send Reply\" onPress={handleReply} color=\"#28a745\"/>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst ticketStyles = StyleSheet.create({\r\n  container: { padding: 20, paddingBottom: 50 },\r\n  heading: { fontSize: 22, fontWeight: \"bold\", marginBottom: 10 },\r\n  label: { marginBottom: 5, fontSize: 16 },\r\n  image: { width: \"100%\", height: 250, marginVertical: 10, borderRadius: 5 },\r\n  message: { padding: 10, borderWidth: 1, borderColor: \"#ccc\", borderRadius: 5, marginBottom: 5 },\r\n  author: { fontWeight: \"bold\", marginBottom: 3 },\r\n  input: { borderWidth: 1, borderColor: \"#ccc\", borderRadius: 5, padding: 10, marginVertical: 10, minHeight: 60 }\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}